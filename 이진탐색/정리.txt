순차탐색
리스트 안에 있는 특정한 데이터를 찾기 위해 앞에서부터 데이터를 하나씩 차례대로 확인하는 방법

이진 탐색
배열 내부의 데이터가 정렬 되어 있어야만 사용할 수 있는 알고리즘
위치를 나타내는 변수 3개 -> 시작점, 끝점, 중간점
찾으려는 데이터와 중간점 위치에 있는 데이터를 반복적으로 비교
-> 이진 탐색은 한 번 확인할 때마다 확인하는 원소의 개수가 절반씩 줄어든다는 점에서 시간 복잡도가 O(logN) 이다.

1 4 9 13 25 28 34 48 50 53 59 가 있을 경우 9 를 찾으려고 할 때
-> 28 이 중간 찾으려는 수가 28 보다 작은지 큰지, 같은지 확인 -> 28 보다 작음
1 4 9 13 25
-> 중간점인 9가 찾으려는 수가 9보다 작은지 큰지, 같은지 확인 -> 9로 같음

재귀함수로 구현한 이진탐색과 반복으로 구현한 이진탐색은 코드로 보기

트리자료 구조
데이터베이스는 내부적으로 대용량 데이터 처리에 적합한 트리 자료구조 이용
트리의 특징
-> 부모 노드와 자식 노드의 관계로 표현
-> 최상단 노드 = 루트 노드
-> 최하단 노드 = 단말 노드
-> 트리에서 일부 떼어내도 트리구조 = 서브트리
-> 파일 시스템과 같이 계층적이고 정렬된 데이터를 다루기에 적합

트리 자료구조 중에서 가장 간단한 형태가 이진 탐색 트리
이진 탐색 트리의 특징
-> 부모 노드보다 왼쪽 자식은 노드가 작다
-> 부모 노드보다 오른쪽 자식은 노드가 크다


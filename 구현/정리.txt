ch04구현
[피지컬로 승부하기]
구현: 머릿 속에 알고리즘을 소스코드로 바꾸는 과정

소스코드 작성 => 모든 문제에 필수
구현: 모든 범위의 코딩테스트 문제 유형 포함 개념(별도의 유형으로 다루지 않지만 취업 코딩 테스트에서는 자주출제)

문제 해결
1. 풀이생각
2. 코드로 구현(1. 프로그래밍 언어 문법 정확히(라이브러리 사용법 숙지포함)
         2. 문제의 요구사항에 어긋나지 않게, 답안 코드를 실수없이)

구현이 어려운(까다로운) 문제
1. 알고리즘은 간단하지만, 코드가 지나치게 길어지는 문제
2. 특정 소수점 자리까지 출력해야하는 문제
3. 문자열이 입력으로 주어졌을때 한 문자 단위로 끊어서 리스트에 넣어야하는(파싱을 해야하는 문제)


이책에서 구현 유형으로 다루고 있는 유형
1. 완전 탐색
- 모든 경우의 수를 주저 없이 다 계산하는 해결방법
2. 시뮬레이션
- 문제에서 제시한 알고리즘을 한 단계씩 차례대로 직접 수행





[구현 시 고려해야 할 메모리 제약 사항]
1. C/C++에서의 변수의 표현 범위
전통적 프로그래밍 언어에서 정수형표현 시 int자료형을 사용, 4byte
따라서 부호비트 제외 -2^31 ~ 2^31-1의 범위까지 표현 가능 범위를 벗어나는 값은 처리할 수 없음

2^31-1 보다 큰 수를 처리할 경우에는 8byte long long 과 같은 자료형 사용
long long 범위 -2^63 ~ 2^63-1

long long 보다 더 큰 수는 BigInteger 클래스를 구현하거나 이용 / 보통 잘 출제되지 않음
- 자바의 경우 표준 라이브러리로 지원
- C++에는 없음(외부 라이브러리 형태 그대로 가져와야한다. 다만 가능할 때만.)
부스트 라이브러리

파이썬은 직접 자료형을 지정할 필요가 없기 때문에 자료형 표현 범위 제한에 대해 깊게 생각할 필요가 없음
하지만 실수형 변수는 유효숫자에 따라서 연산결과가 원하는 값이 나오지 않을 수 있음


2. 파이썬에서 리스트 크기
파이썬에서 여러 개의 변수를 사용할 때는 리스트를 이용-> 고려해야할 사항이 있음 "메모리 제한"

int 자료형 데이터의 개수에 따른 메모리 사용량
데이터의 개수    메모리 사용량
1,000                     약 4KB
1,000,000                약 4MB
10,000,000               약 40MB

리스트를 여러 개 선언하고, 그중에서 크기가 1,000만 이상인 리스트가 있다면 메모리 용량 제한에 걸리는 경우도 있음(출제되는 경우도 드물다)

기억할점 => 일반적인 코딩 테스트 수준에서는 메모리 사용향 제한보다 더 적은 크기의 메모리를 사용해야한다는 점




[채점 환경]
문제에서 요구하는 메모리 제한과 실행 시간 제한은 코딩 테스트를 출제하는 기관마다, 문제마다 조금씩 다르다.
보통 아래와 같이 정보가 적혀있다.
* 시간제한: 1초
* 메모리 제한: 128MB

파이썬은 c/c++에 비해 속도가 느리다.
2020년을 기준으로 파이썬 3.7로 코드를 작성할 때 자신의 코드가 1초에 2,000만 번의 연산을 수행한다고 가정하면 무리가 없다.

시간 제한이 1초이고, 데이터 개수가 100만 개인 문제가 있다면 일반적으로 시간복잡도 O(NlogN)이내의 알고리즘을 이용하여 풀어야한다.
N=1,000,000일때,
NlogN은 약 20,000,000이기 때문이다.

알고리즘 문제를 풀 때는 시간 제한과 데이터의 개수를 먼저 확인한 뒤에 이 문제를 어느정도의 시간복잡도 알고리즘으로 작성해야 풀 수 있을 것인지 예측할 수 있어야한다.






[구현 문제에 접근하는 방법]
보통 구현 유형의 문제는 사소한 조건 등을 명시해주며 문제의 길이가 긴 편
C/C++나 자바에 비해 파이썬이 상대적으로 해당 유형의 문제를 쉽게 해결할 수 있다.

실무에서의 파이썬은 GPU를 연동하며, 반복적인 행렬 계산을 요구하는 수학문제를 풀 때는 c언어로 작성된 파이썬 코어 소프트웨어가 동작한다.
알고리즘 코딩 테스트환경에서는 GPU연산을 쓰는 경우가 없어 그러한 사항을 고려하지 않는다.

자동 채점 방식을 이용하는 코딩 테스트 환경에서는 Pypy3를 지원하는 곳이 늘고 있다.
Pypy3 => 파이썬3문법을 그대로 지원하며 실행 속도가 빠르다(2,000만번~1억번).

C/C++를 주로 사용하는 숙련도 높은 랭커들은 자신만의 코드 노트가 있어 이를 잘 활용한다.

API개발 문제 또한 구현 유형 상당히 맞닿아 있는데, 파이썬을 사용하면 C/C++나 자바에 비해 직관적인 코드의 라이브러리를 사용할 수 있어 유리하다.

=> 파이썬은 초보자에게 유리한데, 속도나 메모리 면에서 주의할 점이 있다. Pypy3를 지원하는 곳이라면 Pypy3를 선택하는 것이 좋다.
